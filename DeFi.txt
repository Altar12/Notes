DeFi
----------------------------------------------------------------
Introduction


DeFi: movement, aims at making a new financial system that is open to everyone & doesn't require trusting intermediaries
main bldg blocks of DeFi: smart contracts

makerDAO: one of the first projects that started DeFi movement
          allowed users to lock in ETH as collateral & generate DAI

parts of DeFi:
 lending & borrowing, stable coins, Dexes, derivatives, margin trading, insurance

lending & borrowing
	projects: makerDAO, compound, AAVE
stable coins (2 types)
	algorithmic: with use of smart contracts & incentives, value is pegged to a fiat currency (eg DAI)
	non-algorithmic: centralized, a company holds the equivalent of the value of stable coin as fiat currency (eg USDC, USDT)
decentralized exchanges
	allows exchanging crypto assets in completely decentralized & permissionless way, without giving up custody of the coins
	2 types of dexes:
	a. liquidity pool based (eg. uniswap)
	b. order book based (eg. loopring, idex)
derivatives
	contracts that derive their value from the performance of an underlying asset
	eg. project: synthetix - allows on-chain exposure to different assets
margin trading
	practice of using borrowed funds to increase a position in a certain asset
	projects: dy/dx, fulcrum
insurance
	guarantees of compensation in return of the payment of a premium
	eg. protection against smart contract failures, protection of deposits
	eg project: nexus mutual

the above parts can be combined together in multiple various ways

----------------------------------------------------------------
Yield Farming

yield farming: way of maximizing rate of return on capital, by leveraging different DeFi protocols
			   yield farmers try to chase the highest yield, by swtiching btw multiple different strategies
APY (Annulaised Percentage Yield): common way of expressing returns of various yield farming strategies

Three main components that make insane high returns possible on yield farming
	1. Liquidity mining
			liquidity mining is the process of distributing tokens to the users of a protocol
			creates additional incentives for yield farmers as token rewards are added on top of yield already being generated by protocol usage
			depending on the protocol, the incentive may be so high that farmers may be willing to lose on their initial capital just to gain reward tokens, that make the overall strategy highly profitable
	2. Leverage
			using borrowed money to increase the potential return of an investment
			farmers borrow coins by depositing some other coins as collateral. Then further use borrowed coins as collateral to borrow some other coins. Repeat this a few times. By doing so farmers generate greater returns on their initial capital
	3. Risk
			yield farming is high risk high reward 

Yield farming strategies: set of steps that aim at generating high yield on the capital. These steps involve atleast one of the following:
	1. Lending & borrowing
		eg. farmers can supply DAI/USDC to a lending platform & start getting returns on their capital. Liquidity mining & leverage can superchage that.
	2. Supplying capital to liquidity pools
		yield farmers can supply coins to one of the liquidity pools in protocols like uniswap & get rewarded with fees that are charged for swapping different tokens. Again liquidity mining can supercharge this.
	3. Staking LP (liquidity provider) tokens
		LP tokens: represent participation in a liquidity pool
		some protocols allow liquidity providers to stake their LP tokens
	strategies can be combined to maximise yield even further
	yield farming strategies can become obsolete very quickly

----------------------------------------------------------------
Liquidity Pools

Liquidity pools: In essence, are pools of tokens locked in a smart contract
				 used to facilitate trading by providing liquity
				 extensively used by some of the dexes
bancor: one of the first projects that introduced liquidity pools, but were widely popularized by uniswap

Why liquidity pools are needed:
In traditional order book exchange, buyers(bidders) set max price they r willing to pay for an asset
and sellers set minimum price they r willing to sell their asset for
	1. If the both the set prices do not match, trading simply can not happen
	2. Also even if the price matches, it can happen that amount of coins offered by seller is less than what buyers want, trade will not happen in this case also
solution to above problem employed by order book exchanges: Market Makers
Market Makers: entities that facilitate trading by always willing to buy or sell an asset
	       by doing so they provide liquidity, users can always trade & don't have to wait for a counterparty to show up 
(MMs usually track the current price of an asset by constantly changing their prices, which results in huge number of orders(or order cancellations) being sent to an exchange)
Ethereum w/ 12-15 TPS & block time of 10-19 seconds is not viable for order book exchange because on-chain exchange will be:
slow, expensive(gas fee) & have bad UX, also MMs will go bankrupt by just updating their orders (gas fee)
Hence, liquidity pools are needed

Working of liquidity pools:
A simple liquidity pool contains two different types of tokens, & each pools creates a new market for that pair of tokens
When a new pool is created, the first liquidity provider(LP) sets the inital (relative) price of the two tokens. LP is incentivised to supply equal value(not amount) of both the tokens
(if the inital price of tokens in the pool diverges from the current global market price, it creates an instant arbitrage opportunity that can result in lost capital for the LP)
The concept of supplying tokens in a correct ratio remains same for all other LPs that are willing to add more funds to the pool later
When liquidity is supplied to a pool, the LP receives spcl tokens called LP tokens in proportion to how much liquidity they supplied to the pool
On a trade facilitated by the pool a fee of 0.3% is proportionally distributed amongst all the LP token holders
If LP wants to get their underlying liquidity back plus any accrued fee, they must burn their LP tokens
Automated Market Maker (AMM): each token swap that a liquidity pool facilitates results in price adjustment according to a deterministice pricing algorithm. This mechanism is also called AMM.
                              liquidity pools across different protocols may use slightly different algorithm
Basic liquidity pools used by uniswap use a Constant Product Market Maker algorithm
	makes sure that product of quantities of two supplied tokens always remain same
	i.e. x*y = k
	becoz of algo, pool can always provide liquidity no matter how large the trade is, algo asymptotically increases the price of the token as the desired quantity increases
No need to fuss on math in this section, main takeaway: ratio of tokens in the pool dictates the price
so if someone buys eth from dai-eth pool, they decrease supply of eth & increase supply of dai -> increase the price of eth & decrease the price of dai
how much the price moves depends on the size of the trade in proportion to the size of the pool, bigger the size of the pool in comparison to trade size, lesser the price impact (aka slippage) occurs
becoz larger liquidity pools creates less slippage and result in better trading experience, protcols like balancer started incentiving LPs with extra tokens for providing liquidity to certain pools
